{
	"info": {
		"_postman_id": "ee9c81fa-aadf-487a-992a-47657c0e2b80",
		"name": "SmartCityAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The JWT should contain status: client\", () => {\r",
									"    const text = pm.response.text();\r",
									"    const payload_string = atob(text.split(\".\")[1]); // see: https://gist.github.com/benhowes/ebf9d2f905d7744e7aa093afe19ddbcd#gistcomment-2811160\r",
									"    const payload_objet = JSON.parse(payload_string);\r",
									"    pm.expect(payload_objet.value.status).to.be.equal(\"client\"); \r",
									"    pm.environment.set(\"jwt_token_client\", text.split('\"')[1]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"emma_manu\",\r\n    \"password\": \"mot\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/user/login",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The JWT should contain status: admin\", () => {\r",
									"    const text = pm.response.text();\r",
									"    const payload_string = atob(text.split(\".\")[1]); // see: https://gist.github.com/benhowes/ebf9d2f905d7744e7aa093afe19ddbcd#gistcomment-2811160\r",
									"    const payload_objet = JSON.parse(payload_string);\r",
									"    pm.expect(payload_objet.value.status).to.be.equal(\"admin\");\r",
									"    pm.environment.set(\"jwt_token_admin\", text.split('\"')[1]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"arnaud_berg\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/user/login",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Category Count as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The response should have a number of category\", () => {\r",
									"    pm.expect(pm.response.json()).to.be.equal(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/category/count",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"category",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category as client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_client}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/category",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"test category\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/category/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"category",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Post category as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new category\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/category",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post category as admin with bad body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nom\": \"new category\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/category",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post category as client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 403\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_client}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new category\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/category",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"category"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Meal",
			"item": [
				{
					"name": "Meal Count as client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 403\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_client}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/meal/count",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"meal",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete meal as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/meal",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"meal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Get all orders as client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 403\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_client}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/order",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order by search element as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"All orders containing the search element should be returned\", () => {\r",
									"    const allOrders = [\r",
									"        {\r",
									"        \"id\": 10,\r",
									"        \"order_date\": \"14-06-2022\",\r",
									"        \"user_fk\": 8\r",
									"        }\r",
									"    ];\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.be.eql(allOrders);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/order?searchElem=10",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"order"
							],
							"query": [
								{
									"key": "searchElem",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update order as client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The status code should be 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"test category\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/v1/category/",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"category",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}